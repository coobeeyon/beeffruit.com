---
import Base from "../layouts/Base.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import InfiniteList from "../components/InfiniteList.astro";
import Quiz from "../components/Quiz.astro";
import ChaosWheel from "../components/ChaosWheel.astro";

const structuredData = {
  '@context': 'https://schema.org',
  '@type': 'Organization',
  name: 'BeefFruit',
  url: 'https://beeffruit.com'
};

const breakingNews = [
  "üö® SCIENTISTS CONFIRM: TOMATOES ARE HAVING AN IDENTITY CRISIS",
  "‚ö° BREAKING: LOCAL MANGO REFUSES TO RIPEN, DEMANDS LAWYER",
  "üî• EXCLUSIVE: BEEF AND FRUIT SIGN HISTORIC PEACE TREATY",
  "üí• URGENT: YOUR REFRIGERATOR MAY BE PLOTTING SOMETHING",
  "üåü LEAKED: SECRET FRUIT RANKINGS CAUSE GLOBAL PANIC"
];
---

<Base title="BeefFruit ‚Äî MAXIMUM INTERNET CHAOS" description="The most unhinged content farm on the web. We're not sorry." canonicalUrl="https://beeffruit.com/" {structuredData}>
  <Fragment slot="header"><Header /></Fragment>

  <!-- Breaking News Ticker -->
  <div class="animate-gradient overflow-hidden py-2">
    <div class="ticker-content flex gap-8 text-black font-bold">
      {breakingNews.map(news => <span class="whitespace-nowrap">{news}</span>)}
      {breakingNews.map(news => <span class="whitespace-nowrap">{news}</span>)}
    </div>
  </div>

  <!-- Chaotic Hero -->
  <section class="relative py-20 overflow-hidden">
    <div class="absolute inset-0 animate-gradient opacity-20"></div>
    <div class="relative text-center">
      <div class="inline-block">
        <h1 class="text-6xl md:text-8xl font-black glitch-text">
          <span class="rainbow-text">BEEF</span><span class="text-white">vs</span><span class="rainbow-text">FRUIT</span>
        </h1>
        <div class="absolute -top-4 -right-4 text-4xl float-emoji">ü•©</div>
        <div class="absolute -bottom-4 -left-4 text-4xl float-emoji" style="animation-delay: 1s">üçâ</div>
      </div>
      
      <p class="mt-6 text-xl md:text-2xl font-bold text-brand-yellow glitch-text">
        ‚ö†Ô∏è WARNING: EXTREME CONTENT AHEAD ‚ö†Ô∏è
      </p>
      
      <div class="mt-8 flex flex-wrap items-center justify-center gap-4">
        <button id="chaos-injector" class="neon-glow rounded-xl bg-brand-pink text-white font-black px-8 py-4 text-lg shake-hover">
          üî• INJECT CHAOS INTO MY VEINS
        </button>
        <div class="text-3xl font-bold">
          <span class="text-brand-green">üëÅ</span>
          <span class="text-white" id="viewer-count">69,420</span>
          <span class="text-gray-400 text-sm">WATCHING NOW</span>
        </div>
      </div>

      <div class="mt-12 grid grid-cols-3 gap-4 max-w-2xl mx-auto">
        <div class="text-center">
          <div class="text-4xl font-black rainbow-text">24/7</div>
          <div class="text-sm text-gray-400">CONTENT GENERATION</div>
        </div>
        <div class="text-center">
          <div class="text-4xl font-black rainbow-text">‚àû</div>
          <div class="text-sm text-gray-400">SCROLL DEPTH</div>
        </div>
        <div class="text-center">
          <div class="text-4xl font-black rainbow-text">0%</div>
          <div class="text-sm text-gray-400">MAKES SENSE</div>
        </div>
      </div>
    </div>
  </section>

  <!-- Countdown Timer to Nothing -->
  <section class="py-8 text-center bg-black/50">
    <h2 class="text-2xl font-bold text-brand-red">‚è∞ SOMETHING HAPPENS IN:</h2>
    <div class="text-5xl font-black mt-4" id="countdown">00:47:23</div>
    <p class="text-sm text-gray-500 mt-2">We don't know what</p>
  </section>

  <section id="feed" class="py-8">
    <InfiniteList title="üî• HOT GARBAGE TRENDING NOW üî•" />
  </section>

  <!-- Random Fact Generator -->
  <section class="py-12 text-center">
    <div class="inline-block p-8 rounded-2xl bg-gradient-to-br from-brand-blue/20 to-brand-pink/20 border-2 border-white/20">
      <h3 class="text-xl font-bold mb-4">üí° RANDOM FACT</h3>
      <p class="text-2xl font-bold" id="random-fact">Bananas are berries but strawberries aren't</p>
      <button class="mt-4 text-sm text-brand-yellow hover:text-white">‚Üª ANOTHER ONE</button>
    </div>
  </section>

  <section id="quiz" class="py-16">
    <Quiz />
  </section>

  <ChaosWheel />

  <!-- Final call to chaos -->
  <section class="py-20 text-center">
    <h2 class="text-4xl font-black mb-4">
      <span class="glitch-text">YOU'VE MADE IT THIS FAR</span>
    </h2>
    <p class="text-xl text-brand-yellow mb-8">Your fate is sealed. The algorithms know.</p>
    <div class="inline-block p-8 rounded-2xl neon-glow">
      <p class="text-6xl mb-4">üé≠</p>
      <p class="text-2xl font-bold rainbow-text">BEEF OR FRUIT?</p>
      <p class="text-sm text-gray-400 mt-2">The answer was inside you all along</p>
    </div>
  </section>

  <Fragment slot="footer"><Footer /></Fragment>
</Base>

<style>
  .ticker-content {
    animation: scroll 30s linear infinite;
  }
  
  @keyframes scroll {
    0% { transform: translateX(0); }
    100% { transform: translateX(-50%); }
  }
</style>

<script>
  // Fake viewer count that changes
  setInterval(() => {
    const el = document.getElementById('viewer-count');
    if (el) {
      const current = parseInt(el.textContent.replace(/,/g, ''));
      const change = Math.floor(Math.random() * 1000) - 400;
      el.textContent = (current + change).toLocaleString();
    }
  }, 3000);

  // Countdown timer to nothing
  setInterval(() => {
    const el = document.getElementById('countdown');
    if (el) {
      const parts = el.textContent.split(':').map(Number);
      let [h, m, s] = parts;
      s--;
      if (s < 0) { s = 59; m--; }
      if (m < 0) { m = 59; h--; }
      if (h < 0) { h = 23; }
      el.textContent = `${String(h).padStart(2,'0')}:${String(m).padStart(2,'0')}:${String(s).padStart(2,'0')}`;
    }
  }, 1000);

  // Random fact rotation
  const facts = [
    "Bananas are berries but strawberries aren't",
    "A group of flamingos is called a 'flamboyance'",
    "Honey never spoils. Ever. Think about that.",
    "Octopi have three hearts and blue blood",
    "You can't hum while holding your nose",
    "Wombat poop is cube-shaped",
    "The moon is moving away from Earth",
    "Beef was illegal in Japan for 1200 years"
  ];
  
  document.querySelector('button[class*="text-brand-yellow"]')?.addEventListener('click', () => {
    const el = document.getElementById('random-fact');
    if (el) {
      el.textContent = facts[Math.floor(Math.random() * facts.length)];
      el.classList.add('shake-hover');
      setTimeout(() => el.classList.remove('shake-hover'), 500);
    }
  });

  // CHAOS INJECTION SYSTEM
  let chaosLevel = 0;
  const chaosBtn = document.getElementById('chaos-injector');
  const chaosStates = [
    { text: 'üî• INJECT CHAOS INTO MY VEINS', class: 'bg-brand-pink' },
    { text: 'üíâ INJECTING... PLEASE WAIT', class: 'bg-brand-yellow animate-pulse' },
    { text: 'üåà CHAOS LEVEL 1: ACTIVATED', class: 'bg-gradient-to-r from-brand-pink to-brand-yellow' },
    { text: '‚ö° CHAOS LEVEL 2: ASCENDING', class: 'bg-gradient-to-r from-brand-green to-brand-blue animate-gradient' },
    { text: 'üîÆ CHAOS LEVEL 3: TRANSCENDING', class: 'bg-gradient-to-r from-purple-600 to-pink-600 animate-pulse' },
    { text: 'üëÅÔ∏è CHAOS LEVEL 4: OMNISCIENT', class: 'animate-gradient' },
    { text: 'üåå MAXIMUM CHAOS ACHIEVED', class: 'bg-black border-2 border-white animate-pulse' },
    { text: 'üíÄ YOU ARE NOW BEEF', class: 'bg-red-900 animate-pulse' },
    { text: 'üçâ YOU ARE NOW FRUIT', class: 'bg-green-600 animate-pulse' },
    { text: '‚àû YOU ARE EVERYTHING', class: 'rainbow-text text-4xl' }
  ];

  const chaosEffects = [
    () => {}, // Level 0: Nothing
    () => { // Level 1: Mild shaking
      document.body.classList.add('animate-pulse');
      setTimeout(() => document.body.classList.remove('animate-pulse'), 2000);
    },
    () => { // Level 2: Color inversion
      document.documentElement.style.filter = 'hue-rotate(90deg)';
      setTimeout(() => document.documentElement.style.filter = '', 3000);
    },
    () => { // Level 3: Everything floats
      document.querySelectorAll('section, article, div').forEach((el, i) => {
        setTimeout(() => {
          el.style.transition = 'transform 2s';
          el.style.transform = `translateY(-${Math.random() * 20}px) rotate(${Math.random() * 6 - 3}deg)`;
          setTimeout(() => el.style.transform = '', 2000);
        }, i * 50);
      });
    },
    () => { // Level 4: Glitch text everywhere
      document.querySelectorAll('h1, h2, h3, p').forEach(el => {
        el.classList.add('glitch-text');
        setTimeout(() => el.classList.remove('glitch-text'), 3000);
      });
    },
    () => { // Level 5: Rainbow everything
      document.querySelectorAll('*').forEach((el, i) => {
        if (i % 3 === 0) el.classList.add('rainbow-text');
        setTimeout(() => el.classList.remove('rainbow-text'), 4000);
      });
    },
    () => { // Level 6: Spin the page
      document.body.style.transition = 'transform 3s';
      document.body.style.transform = 'rotate(360deg)';
      setTimeout(() => {
        document.body.style.transform = '';
      }, 3000);
    },
    () => { // Level 7: Beef mode
      document.body.style.backgroundColor = '#8B0000';
      document.body.innerHTML += '<div id="beef-rain" style="position:fixed;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:9999;"></div>';
      const rain = document.getElementById('beef-rain');
      for (let i = 0; i < 50; i++) {
        const beef = document.createElement('div');
        beef.textContent = 'ü•©';
        beef.style.position = 'absolute';
        beef.style.left = Math.random() * 100 + '%';
        beef.style.fontSize = Math.random() * 30 + 20 + 'px';
        beef.style.animation = `fall ${Math.random() * 3 + 2}s linear`;
        rain?.appendChild(beef);
      }
      setTimeout(() => {
        rain?.remove();
        document.body.style.backgroundColor = '';
      }, 5000);
    },
    () => { // Level 8: Fruit mode
      const fruits = ['üçé', 'üçä', 'üçã', 'üçå', 'üçâ', 'üçá', 'üçì', 'ü´ê', 'üçí', 'üçë', 'ü•≠', 'üçç', 'ü••', 'ü•ù'];
      document.querySelectorAll('*').forEach(el => {
        if (el.textContent && Math.random() > 0.7) {
          el.dataset.original = el.textContent;
          el.textContent = fruits[Math.floor(Math.random() * fruits.length)];
          setTimeout(() => {
            if (el.dataset.original) el.textContent = el.dataset.original;
          }, 3000);
        }
      });
    },
    () => { // Level 9: EVERYTHING
      document.body.style.animation = 'spin 1s, gradient 2s, pulse 0.5s';
      document.documentElement.style.filter = 'contrast(200%) brightness(150%) hue-rotate(180deg)';
      const alert = document.createElement('div');
      alert.innerHTML = '<div style="position:fixed;top:50%;left:50%;transform:translate(-50%,-50%);font-size:5rem;z-index:99999;text-shadow:0 0 50px white;animation:pulse 0.5s infinite;">YOU WIN</div>';
      document.body.appendChild(alert);
      setTimeout(() => {
        alert.remove();
        document.body.style.animation = '';
        document.documentElement.style.filter = '';
        chaosLevel = 0;
        updateChaosButton();
      }, 5000);
    }
  ];

  function updateChaosButton() {
    if (chaosBtn) {
      const state = chaosStates[Math.min(chaosLevel, chaosStates.length - 1)];
      chaosBtn.textContent = state.text;
      chaosBtn.className = `neon-glow rounded-xl text-white font-black px-8 py-4 text-lg shake-hover ${state.class}`;
    }
  }

  chaosBtn?.addEventListener('click', () => {
    chaosLevel++;
    updateChaosButton();
    
    if (chaosLevel < chaosEffects.length) {
      chaosEffects[chaosLevel]();
    }
    
    // Add screen shake on every click
    document.body.style.animation = 'shake 0.5s';
    setTimeout(() => document.body.style.animation = '', 500);
    
    // Random chaos messages
    const messages = [
      'CHAOS COURSING THROUGH YOUR VEINS',
      'REALITY IS OPTIONAL',
      'BEEF AND FRUIT ARE ONE',
      'THE SIMULATION APPROVES',
      'ERROR: TOO MUCH CHAOS',
      'CONGRATULATIONS',
      'WHY DID YOU DO THIS',
      'THERE IS NO GOING BACK'
    ];
    
    if (Math.random() > 0.5) {
      const msg = document.createElement('div');
      msg.textContent = messages[Math.floor(Math.random() * messages.length)];
      msg.style.cssText = `position:fixed;top:${Math.random() * 80 + 10}%;left:50%;transform:translateX(-50%);z-index:9999;font-size:2rem;font-weight:bold;color:white;text-shadow:0 0 20px black;animation:float 3s ease-out;pointer-events:none;`;
      document.body.appendChild(msg);
      setTimeout(() => msg.remove(), 3000);
    }
  });
</script>

<style>
  @keyframes fall {
    from { top: -100px; transform: rotate(0deg); }
    to { top: 100vh; transform: rotate(360deg); }
  }
</style>

